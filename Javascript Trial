const mongoose = require('mongoose');

const CountryModel = mongoose.model('Country', {
    name: {
        type: String,
        required: true,
        unique: true
    },
    isoCode: {
        type: String
    },
    //##2
    continent: [{
        type: mongoose.Schema.Types.ObjectId,
        ref: "Continent"
    }],
    //##5
    population: {
        type: Number,
        default: -1
    },
});

module.exports = CountryModel

______________________________________


const { Router, response } = require('express');
const mongoose = require('mongoose');

const ContinentModel = mongoose.model('Continent', { 
    name: {
        type: String,
        required: true,
        unique: true 
    },
    isoCode: {
        type: String
    },
    countries: [{
        type: mongoose.Schema.Types.ObjectId,
        ref: 'Country'
    }]
    
});

module.exports = ContinentModel;

____________________________________


const { response } = require('express');
const express = require('express')
const router = express.Router()

const ContinentModel = require('../models/Continent')

router.get('/',async (req, res) => {
    const Continents = await ContinentModel.find();
    res.status(200).json(Continents);
});

//##3
router.get('/number',async (req, res)=>{
    const Countries = await ContinentModel.aggregate([{
        $addFields: {count: {$size:"Countries"}}
 }]);
 res.status(200).json(Continents);
})
 //##4
router.get('/firstfour', async(req,res)=> {
    const fourth = await ContinentModel.find().populate({
        path: 'Countries'
    }, null,{sort: 'name',limit: 4});
    res.status(200).json(fourth);
});


module.exports = router;

________________________________________


const express = require('express')
const router = express.Router()

const CountryModel = require('../models/Country')

router.get('/',async (request, response) => {
    const Countries = await CountryModel.find().populate('continent');
    response.status(200).json(Countries);
});

router.get('/:id',async (request, response) => {
    const countryId = request.params.id;
    const Countries = await CountryModel.findOne({
        _id: countryId
    });
    response.status(200).json(Countries)
});

router.post('/',async (request, response) => {
    const {name, isoCode} = request.body

    const country = await CountryModel.create({
        name: name,
        isoCode 
    });

    response.status(200).json(country);
});

router.delete('/:id', async (request, response) =>{
    const countryId = request.params.id;

    await CountryModel.findOneAndDelete({
        _id: countryId
    });

    response.status(200).json({msg: 'Country well deleted !'});

});

router.put('/:id', async (request, response) =>{
    const countryId = request.params.id;
    const {name, isoCode} = request.body

    const country = await CountryModel.findOneAndUpdate({
        _id: countryId
    },{
        name,
        isoCode
    },{
        new: true
    });

    response.status(200).json(country);
     
});

_____________________________


//##1
router.get("/search/:query?",async (req, res)=>{
    const query = req.params.query;
    const result = await CountryModel.find({
        name: {$regex: query,$options: "i"}
    });
    res.status(200).json(result);
})

//##2
router.get('/all/bypop',async (req, res)=>{
    const Countries = await CountryModel.find()
    .sort({population: 1});
    res.status(200).json(Countries);
});

//##6

router.get('', async (req,res) => {
    const Countries = await CountryModel.find().sort({population: 1})
        res.status(200).json(Countries);
});

//##7
router.get('', async (req,res) => {
    const Countries = await CountryModel.find({
        name: {$regex : new RegExp(".*u.*","i")},
        population:{ $gte: 30000}},
        ['name','isocode','population'] )
        .populate('Continent','')
    })


module.exports = router;

